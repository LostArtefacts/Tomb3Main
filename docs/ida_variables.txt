# Type information for the IDA importer.
#
# This is unrelated to the Tomb3Main codebase which is a subject to changes and
# improvements with regard to the original game. This file documents the
# Tomb3.exe layout.

# F - Function
# V - Variable
# S - Signature known
# R - Reverse engineered
# X - No reverse engineering needed or inlined in one of the reverse engineered functions
# C - Called from within one or more of the reverse engineered functions

FS- 00401000 000001D0 void phd_GenerateW2V(PHD_3DPOS *viewpos);
FS- 004012D0 000000F7 void phd_GetVectorAngles(int32_t x, int32_t y, int32_t z, PHD_ANGLE *dest);
FS- 004011D0 00000078 void phd_LookAt(int32_t xsrc, int32_t ysrc, int32_t zsrc, int32_t xtar, int32_t ytar, int32_t ztar, PHD_ANGLE roll);
FS- 00401350 0000008F void phd_NormaliseVector(int32_t x, int32_t y, int32_t z, int32_t *dest);
FS- 004013E0 000000AA void phd_RotX(PHD_ANGLE rx);
FS- 00401490 000000A8 void phd_RotY(PHD_ANGLE ry);
FS- 00401540 000000A8 void phd_RotZ(PHD_ANGLE rz);
FS- 004015F0 000001DC void phd_RotYXZ(PHD_ANGLE ry, PHD_ANGLE rx, PHD_ANGLE rz);
FS- 004017D0 000001E7 void phd_RotYXZpack(int32_t rots);
FS- 004019C0 000000AB bool phd_TranslateRel(int32_t x, int32_t y, int32_t z);
FS- 00401A70 0000007A void phd_TranslateAbs(int32_t x, int32_t y, int32_t z);
FS- 00401AF0 000000F7 void phd_PutPolygons(int16_t *objptr, int32_t clip_status);
FS- 00401BF0 000000E7 void S_InsertRoom(int16_t *objptr, bool outside);
FS- 00401CE0 00000032 int16_t *calc_back_light(int16_t *objptr);
FS- 00401D20 0000019F void S_InsertBackground(int16_t *objptr);
F-- 00401EC0 0000005D void sub_401EC0();
F-- 00401F20 00000036 void sub_401F20();
F-- 00401F60 000000C4 void sub_401F60();
F-- 00402030 0000009E void sub_402030();
F-- 00402130 00000095 void sub_402130();
F-- 00402180 0000006B void sub_402180();
F-- 004021A0 000001B2 void sub_4021A0();
F-- 00402640 000000D2 void sub_402640();
F-- 00402720 00000146 void sub_402720();
F-- 00402870 00000219 void sub_402870();
F-- 00402A90 00000284 void sub_402A90();
F-- 00402D20 00000FA8 void sub_402D20();
F-- 00403CD0 000014C3 void sub_403CD0();
F-- 00405220 00000030 void sub_405220();
F-- 00405270 00000121 void sub_405270();
F-- 004053A0 0000003D void sub_4053A0();
F-- 004053E0 00000068 void sub_4053E0();
F-- 00405450 00000523 void sub_405450();
F-- 00405980 000000FD void sub_405980();
F-- 00405A80 00000CC4 void sub_405A80();
F-- 00406750 00000027 void sub_406750();
F-- 00406780 00000030 void sub_406780();
F-- 004067B0 000000CE void sub_4067B0();
F-- 00406880 00000160 void sub_406880();
F-- 004069E0 00000370 void sub_4069E0();
F-- 00406D50 0000024E void sub_406D50();
F-- 00406FA0 00000140 void sub_406FA0();
F-- 004070E0 000015CC void sub_4070E0();
F-- 00408800 00000133 void sub_408800();
F-- 00408940 0000045C void sub_408940();
F-- 00408DA0 0000072F void sub_408DA0();
F-- 004094D0 0000008D void sub_4094D0();
F-- 00409560 00000642 void sub_409560();
F-- 00409BB0 0000047A void sub_409BB0();
F-- 0040A030 000004D5 void sub_40A030();
F-- 0040A510 00000179 void sub_40A510();
F-- 0040A690 000001B5 void sub_40A690();
F-- 0040A850 000001A6 void sub_40A850();
F-- 0040AA00 000001D8 void sub_40AA00();
F-- 0040ABE0 00000B0A void sub_40ABE0();
F-- 0040B6F0 000005E0 void sub_40B6F0();
F-- 0040BCD0 000003D4 void sub_40BCD0();
F-- 0040C0B0 0000099B void sub_40C0B0();
F-- 0040CA50 000002D0 void sub_40CA50();
F-- 0040CD20 0000033A void sub_40CD20();
F-- 0040D060 0000015D void sub_40D060();
F-- 0040D1C0 00000152 void S_DrawScreenSprite2d();
F-- 0040D320 000000A3 void S_DrawScreenSprite();
F-- 0040D5F0 00000052 void InitialiseBaton();
F-- 0040D650 00000CA6 void BatonControl();
F-- 0040E350 00000052 void InitialiseCivvy();
F-- 0040E3B0 000008A0 void CivvyControl();
F-- 0040ECA0 000003D6 void sub_40ECA0();
F-- 0040F080 00000101 void sub_40F080();
F-- 0040F190 000002D0 void sub_40F190();
F-- 0040F460 00000080 void sub_40F460();
F-- 0040F4E0 00000609 void sub_40F4E0();
F-- 0040FAF0 000001C2 void sub_40FAF0();
F-- 0040FCC0 000001D0 void sub_40FCC0();
F-- 0040FE90 00000008 void sub_40FE90();
F-- 0040FEA0 0000004E void sub_40FEA0();
F-- 0040FEF0 00000052 void InitialiseArmySMG();
F-- 0040FF50 000007CA void ArmySMGControl();
F-- 00410750 0000004B void InitialiseAutogun();
F-- 004107A0 00000345 void AutogunControl();
F-- 00410AF0 0000020A void sub_410AF0();
F-- 00410D00 00000042 void sub_410D00();
F-- 00410D50 00000103 void sub_410D50();
F-- 00410E60 00000052 void sub_410E60();
F-- 00410EC0 0000023A void sub_410EC0();
F-- 00411100 0000034D void sub_411100();
F-- 00411450 0000008F void InitialiseVulture();
F-- 004114E0 00000213 void VultureControl();
F-- 00411710 0000089B void BlowpipeControl();
F-- 00411FE0 00000054 void sub_411FE0();
F-- 00412040 0000016A void sub_412040();
F-- 004121B0 0000017C void sub_4121B0();
F-- 00412330 000001C7 void sub_412330();
F-- 00412500 000001FE void sub_412500();
F-- 00412730 000000ED void sub_412730();
F-- 00412820 0000089A void sub_412820();
F-- 004130C0 000001CB void sub_4130C0();
F-- 00413290 000000FA void sub_413290();
F-- 00413390 0000004B void sub_413390();
F-- 004133E0 0000051C void sub_4133E0();
F-- 00413900 0000027C void DoShift();
F-- 00413B80 00000090 void sub_413B80();
F-- 00413C10 000000D1 void sub_413C10();
F-- 00413CF0 00000027 void sub_413CF0();
F-- 00413D20 000001D7 void sub_413D20();
F-- 00413F00 000000E2 void sub_413F00();
F-- 00413FF0 000000A6 void sub_413FF0();
F-- 004140A0 0000023F void sub_4140A0();
F-- 004142E0 0000004D void sub_4142E0();
F-- 00414330 00000058 void CreatureActive();
F-- 00414390 000003EA void sub_414390();
F-- 00414780 00000072 void sub_414780();
F-- 00414800 00000208 void sub_414800();
F-- 00414A10 00000095 void sub_414A10();
F-- 00414AB0 000000A4 void sub_414AB0();
F-- 00414B60 000000AF void sub_414B60();
F-- 00414C10 00000216 void GetCreatureMood();
F-- 00414E50 00000256 void CreatureMood();
F-- 004150C0 000000FC void sub_4150C0();
F-- 004151C0 00000484 void sub_4151C0();
F-- 00415650 00000123 void sub_415650();
F-- 00415780 0000009A void sub_415780();
F-- 00415820 00000113 void sub_415820();
F-- 00415940 00000AB7 void CreatureAnimation();
F-- 00416400 000000CA void CreatureTurn();
F-- 004164D0 00000035 void sub_4164D0();
F-- 00416510 00000051 void sub_416510();
F-- 00416570 000000AE void sub_416570();
F-- 00416620 00000050 void CreatureUnderwater();
F-- 00416670 0000005C void sub_416670();
F-- 004166D0 0000016D void sub_4166D0();
F-- 00416840 0000017F void sub_416840();
F-- 004169C0 00000061 void sub_4169C0();
F-- 00416A30 00000087 void sub_416A30();
F-- 00416AC0 00000095 void sub_416AC0();
F-- 00416B60 000005AB void sub_416B60();
F-- 00417110 000000F5 void sub_417110();
F-- 00417210 000000E6 void sub_417210();
F-- 00417300 0000013C void InitialiseCamera();
F-- 0041743C 00000867 void sub_41743C();
F-- 00417CA3 000006B9 void sub_417CA3();
F-- 0041835C 000006FA void sub_41835C();
F-- 00418A56 00000EA6 void sub_418A56();
F-- 004198FC 00000704 void CalculateCamera();
F-- 0041A000 000000BE void sub_41A000();
F-- 0041A0BE 00000583 void sub_41A0BE();
F-- 0041A641 00000249 void sub_41A641();
F-- 0041A890 0000005B void DrawPhaseCinematic();
F-- 0041A8F0 0000003A void sub_41A8F0();
F-- 0041A930 00000110 void StartCinematic();
F-- 0041AA40 0000008E void InitCinematicRooms();
F-- 0041AAD0 000000A3 void InitialisePlayer1();
F-- 0041AB80 00000099 void sub_41AB80();
F-- 0041AC20 0000007F void sub_41AC20();
F-- 0041ACA0 0000016F void DoCinematic();
F-- 0041AE10 00000274 void sub_41AE10();
F-- 0041B090 00000138 void sub_41B090();
F-- 0041B1D0 000000C7 void sub_41B1D0();
F-- 0041B2A0 00000246 void sub_41B2A0();
F-- 0041B4F0 000006BF void ClawmuteControl();
F-- 0041BBE0 000001BF void sub_41BBE0();
F-- 0041BDA0 00000122 void sub_41BDA0();
F-- 0041BED0 00000311 void sub_41BED0();
F-- 0041C1F0 000001E2 void sub_41C1F0();
F-- 0041C3E0 00000051 void InitialiseCleaner();
F-- 0041C440 00000C63 void CleanerControl();
F-- 0041D0B0 0000015E void sub_41D0B0();
F-- 0041D210 00000071 void InitialiseCobra();
F-- 0041D290 00000260 void CobraControl();
F-- 0041D500 00000BF5 void sub_41D500();
F-- 0041E140 0000002F void sub_41E140();
F-- 0041E170 000003DB void CollideStaticObjects();
F-- 0041E560 000000C8 void sub_41E560();
F-- 0041E630 00000055 void sub_41E630();
F-- 0041E690 00000037 void sub_41E690();
F-- 0041E6D0 0000005D void sub_41E6D0();
F-- 0041E730 0000019A void sub_41E730();
F-- 0041E8D0 0000018C void LaraBaddieCollision();
F-- 0041EA60 00000170 void CreatureCollision();
F-- 0041EBD0 0000005C void ObjectCollision();
F-- 0041EC30 00000053 void sub_41EC30();
F-- 0041EC90 0000007E void sub_41EC90();
F-- 0041ED10 0000008D void sub_41ED10();
F-- 0041EDA0 00000336 void ItemPushLara();
F-- 0041F0E0 000000CB void TestBoundsCollide();
F-- 0041F1B0 00000138 void TestLaraPosition();
F-- 0041F2F0 00000139 void sub_41F2F0();
F-- 0041F430 0000018B void MoveLaraPosition();
F-- 0041F5C0 0000016E void sub_41F5C0();
F-- 0041F730 00000018 void InitialiseCompy();
F-- 0041F750 000005D1 void CompyControl();
F-- 0041FD50 0000024B void sub_41FD50();
F-- 0041FFA0 000005EC void ControlPhase();
F-- 00420590 000003A3 void AnimateItem();
F-- 00420970 000000AB void sub_420970();
F-- 00420A20 0000005F void sub_420A20();
F-- 00420A80 000001E1 void GetFloor();
F-- 00420C70 00000192 void GetWaterHeight();
F-- 00420E10 00000514 void GetHeight();
F-- 00421370 000000EE void sub_421370();
F-- 00421460 000008C7 void TestTriggers();
F-- 00421D80 00000055 void TriggerActive();
F-- 00421DE0 0000049F void GetCeiling();
F-- 004222B0 000000B2 void sub_4222B0();
F-- 00422370 0000009F void sub_422370();
F-- 00422410 000002EB void sub_422410();
F-- 00422700 000002EC void sub_422700();
F-- 004229F0 00000240 void sub_4229F0();
F-- 00422C30 0000030C void sub_422C30();
F-- 00422F40 000000B3 void sub_422F40();
F-- 00423000 0000009C void sub_423000();
F-- 004230A0 00000061 void sub_4230A0();
F-- 00423110 00000024 void sub_423110();
F-- 00423140 000000AC void sub_423140();
F-- 004231F0 000000BB void sub_4231F0();
F-- 004232B0 000000F9 void sub_4232B0();
F-- 004233B0 0000013F void sub_4233B0();
F-- 004234F0 000001B6 void CrocControl();
F-- 004236B0 00000059 void sub_4236B0();
F-- 00423710 00000182 void sub_423710();
F-- 004238A0 000000CD void sub_4238A0();
F-- 00423970 0000002D void GetDemoInput();
F-- 004239A0 0000032D void DiverControl();
F-- 00423D70 00000106 void sub_423D70();
F-- 00423E80 000001E1 void sub_423E80();
F-- 00424070 0000004C void InitialiseDog();
F-- 004240C0 00000566 void DogControl();
F-- 00424660 000001CA void sub_424660();
F-- 00424830 000001DB void sub_424830();
F-- 00424A10 00000204 void sub_424A10();
F-- 00424C20 00000037 void DrawPhaseGame();
F-- 00424C60 00000377 void DrawRooms();
F-- 00424FE0 000000B9 void xxxDrawRoomGeometry();
F-- 004250A0 00000313 void sub_4250A0();
F-- 004253C0 000001CA void GetRoomBounds();
F-- 00425590 00000375 void sub_425590();
F-- 00425910 000003FF void sub_425910();
F-- 00425D10 00000182 void sub_425D10();
F-- 00425EA0 00000734 void DrawAnimatingItem();
F-- 004265E0 00001810 void sub_4265E0();
F-- 00427E20 000014FF void sub_427E20();
F-- 00429350 00000034 void sub_429350();
F-- 00429390 00000022 void sub_429390();
F-- 004293C0 00000027 void sub_4293C0();
F-- 004293F0 00000031 void sub_4293F0();
F-- 00429430 00000031 void sub_429430();
F-- 00429470 00000031 void sub_429470();
F-- 004294B0 00000041 void sub_4294B0();
F-- 00429500 00000047 void sub_429500();
F-- 00429550 00000041 void sub_429550();
F-- 004295A0 0000003D void sub_4295A0();
F-- 004295E0 000000A1 void gat_RotYXZsuperpack();
F-- 00429690 0000002A void sub_429690();
F-- 004296C0 0000026D void sub_4296C0();
F-- 00429930 000000F8 void sub_429930();
F-- 00429A30 00000141 void sub_429A30();
F-- 00429BA0 00000160 void CalculateObjectLighting();
F-- 00429D00 000000A6 void sub_429D00();
F-- 00429DB0 00000092 void GetFrames();
F-- 00429E50 0000007C void GetBoundsAccurate();
F-- 00429ED0 00000030 void GetBestFrame();
F-- 00429F00 000000D9 void sub_429F00();
F-- 00429FE0 0000009F void sub_429FE0();
F-- 0042A080 0000004E void InitialiseSparks();
F-- 0042A0D0 000005A2 void UpdateSparks();
F-- 0042A680 00000223 void sub_42A680();
F-- 0042A8B0 000002C1 void sub_42A8B0();
F-- 0042AB80 00000391 void sub_42AB80();
F-- 0042AF20 00000203 void sub_42AF20();
F-- 0042B130 000001B5 void sub_42B130();
F-- 0042B2F0 000001FA void TriggerFireSmoke();
F-- 0042B4F0 00000286 void sub_42B4F0();
F-- 0042B780 00000438 void TriggerFireFlame();
F-- 0042BBC0 000001DA void TriggerSideFlame();
F-- 0042BDA0 000000A3 void sub_42BDA0();
F-- 0042BE50 00000330 void sub_42BE50();
F-- 0042C1A0 00000256 void sub_42C1A0();
F-- 0042C400 00000110 void sub_42C400();
F-- 0042C510 00000155 void sub_42C510();
F-- 0042C670 0000016E void sub_42C670();
F-- 0042C7E0 0000016E void sub_42C7E0();
F-- 0042C950 0000016E void sub_42C950();
F-- 0042CAC0 00000409 void sub_42CAC0();
F-- 0042CED0 000001A1 void UpdateSplashes();
F-- 0042D080 00000085 void SetupRipple();
F-- 0042D110 00000065 void sub_42D110();
F-- 0042D180 00000065 void sub_42D180();
F-- 0042D1F0 000001D7 void sub_42D1F0();
F-- 0042D3D0 00000135 void UpdateBats();
F-- 0042D510 00000055 void sub_42D510();
F-- 0042D570 000000C5 void sub_42D570();
F-- 0042D640 0000010B void TriggerStaticFlame();
F-- 0042D750 00000234 void sub_42D750();
F-- 0042D990 0000000B void sub_42D990();
F-- 0042D9A0 0000010D void KillEverything();
F-- 0042DAB0 000000EF void sub_42DAB0();
F-- 0042DBA0 0000014E void sub_42DBA0();
F-- 0042DCF0 0000010A void sub_42DCF0();
F-- 0042DE00 00000052 void TriggerDynamic();
F-- 0042DE60 0000001D void ClearDynamics();
F-- 0042DE80 00000237 void sub_42DE80();
F-- 0042E0C0 000000A5 void sub_42E0C0();
F-- 0042E170 0000008C void ItemNearLara();
F-- 0042E200 00000068 void SoundEffects();
F-- 0042E270 00000044 void sub_42E270();
F-- 0042E2C0 0000006E void DoBlootSplat();
F-- 0042E330 00000071 void sub_42E330();
F-- 0042E3B0 000000A4 void sub_42E3B0();
F-- 0042E460 00000082 void sub_42E460();
F-- 0042E4F0 000000C1 void sub_42E4F0();
F-- 0042E5C0 00000070 void sub_42E5C0();
F-- 0042E630 0000011D void LaraBreath();
F-- 0042E750 0000016C void sub_42E750();
F-- 0042E8C0 00000129 void sub_42E8C0();
F-- 0042E9F0 000001BD void sub_42E9F0();
F-- 0042EBB0 00000117 void sub_42EBB0();
F-- 0042ECD0 0000000B void sub_42ECD0();
F-- 0042ECE0 00000016 void sub_42ECE0();
F-- 0042ED00 00000094 void sub_42ED00();
F-- 0042EDA0 00000040 void sub_42EDA0();
F-- 0042EDE0 0000001C void sub_42EDE0();
F-- 0042EE00 00000092 void sub_42EE00();
F-- 0042EEA0 00000023 void sub_42EEA0();
F-- 0042EED0 0000002C void sub_42EED0();
F-- 0042EF00 00000023 void sub_42EF00();
F-- 0042EF30 0000001C void sub_42EF30();
F-- 0042EF50 0000001C void sub_42EF50();
F-- 0042EF70 0000001C void sub_42EF70();
F-- 0042EF90 0000001C void sub_42EF90();
F-- 0042EFB0 00000041 void sub_42EFB0();
F-- 0042F000 0000003B void sub_42F000();
F-- 0042F040 00000061 void sub_42F040();
F-- 0042F0B0 00000059 void sub_42F0B0();
F-- 0042F110 0000006F void sub_42F110();
F-- 0042F180 0000000A void sub_42F180();
F-- 0042F190 00000005 void sub_42F190();
F-- 0042F1A0 00000043 void sub_42F1A0();
F-- 0042F1F0 00000043 void sub_42F1F0();
F-- 0042F240 0000000A void sub_42F240();
F-- 0042F250 0000000A void sub_42F250();
F-- 0042F260 00000069 void sub_42F260();
F-- 0042F2D0 00000069 void sub_42F2D0();
F-- 0042F340 000000A1 void sub_42F340();
F-- 0042F3F0 0000000C void sub_42F3F0();
F-- 0042F400 0000001C void sub_42F400();
F-- 0042F420 0000000C void sub_42F420();
F-- 0042F430 0000000E void sub_42F430();
F-- 0042F440 00000005 void sub_42F440();
F-- 0042F450 0000003C void sub_42F450();
F-- 0042F490 0000001F void sub_42F490();
F-- 0042F4B0 00000021 void sub_42F4B0();
F-- 0042F4E0 0000002D void sub_42F4E0();
F-- 0042F510 0000002D void sub_42F510();
F-- 0042F540 00000085 void sub_42F540();
F-- 0042F5D0 0000002C void sub_42F5D0();
F-- 0042F600 00000026 void sub_42F600();
F-- 0042F630 00000056 void sub_42F630();
F-- 0042F690 0000002C void sub_42F690();
F-- 0042F6C0 0000002C void sub_42F6C0();
F-- 0042F6F0 0000002C void sub_42F6F0();
F-- 0042F720 0000002C void sub_42F720();
F-- 0042F750 0000002C void sub_42F750();
F-- 0042F780 0000002C void sub_42F780();
F-- 0042F7B0 0000002C void sub_42F7B0();
F-- 0042F7E0 0000002C void sub_42F7E0();
F-- 0042F810 0000002C void sub_42F810();
F-- 0042F840 0000002C void sub_42F840();
F-- 0042F870 0000002C void sub_42F870();
F-- 0042F8A0 0000002C void sub_42F8A0();
F-- 0042F8D0 0000002C void sub_42F8D0();
F-- 0042F900 0000002C void sub_42F900();
F-- 0042F930 0000002C void sub_42F930();
F-- 0042F960 0000002C void sub_42F960();
F-- 0042F990 0000002C void sub_42F990();
F-- 0042F9C0 00000036 void sub_42F9C0();
F-- 0042FA00 00000027 void sub_42FA00();
F-- 0042FA30 00000012 void sub_42FA30();
F-- 0042FA50 00000015 void sub_42FA50();
F-- 0042FA70 0000001C void sub_42FA70();
F-- 0042FA90 0000005D void BaddieBiteEffect();
F-- 0042FAF0 00000051 void sub_42FAF0();
F-- 0042FB50 000002D5 void sub_42FB50();
F-- 0042FE30 000001DD void sub_42FE30();
F-- 00430010 0000003E void sub_430010();
F-- 00430050 00000251 void sub_430050();
F-- 004302B0 0000012F void sub_4302B0();
F-- 004303E0 00000944 void sub_4303E0();
F-- 00430D30 00000072 void sub_430D30();
F-- 00430DB0 00000872 void FlamerControl();
F-- 00431650 00000234 void sub_431650();
F-- 00431890 000001E7 void sub_431890();
F-- 00431A80 0000018B void sub_431A80();
F-- 00431C10 000002EB void sub_431C10();
F-- 00431F00 00000113 void sub_431F00();
F-- 00432020 0000000A void sub_432020();
F-- 00432030 00000250 void GF_LoadScriptFile();
F-- 00432280 0000001F void GF_DoFrontEndSequence();
F-- 004322A0 00000066 void GF_DoLevelSequence();
F-- 00432310 0000055C void GF_InterpretSequence();
F-- 004328D0 00000EB8 void GF_ModifyInventory();
F-- 00433790 00000074 void InitialiseHair();
F-- 00433810 00000ABC void HairControl();
F-- 004342E0 00000076 void DrawHair();
F-- 00434360 0000002D void FlashIt();
F-- 00434390 00000180 void DrawAssaultTimer();
F-- 00434510 00000256 void DrawAssaultPenalties();
F-- 00434770 000001B6 void DrawQuadbikeLapTime();
F-- 00434930 000000DF void DrawGameInfo();
F-- 00434A10 000000C8 void DrawHealthBar();
F-- 00434AE0 000000E7 void DrawAirBar();
F-- 00434BD0 0000001D void RemoveAmmoText();
F-- 00434BF0 00000131 void DrawAmmoInfo();
F-- 00434D50 00000015 void InitialisePickUpDisplay();
F-- 00434D70 0000003F void AddDisplayPickup();
F-- 00434DB0 0000007A void DisplayModeInfo();
F-- 00434E30 0000002C void DrawModeInfo();
F-- 00434E60 00000571 void HybridControl();
F-- 00435400 00001372 void Display_Inventory();
F-- 00436840 00000179 void ConstructInventory();
F-- 004369C0 0000008F void SelectMeshes();
F-- 00436A50 00000081 void AnimateInventoryItem();
F-- 00436AE0 000004B0 void DrawInventoryItem();
F-- 00436FA0 00000019 void GetDebouncedInput();
F-- 00436FC0 0000008D void sub_436FC0();
F-- 00437050 0000010A void InitColours();
F-- 00437160 00000177 void RingIsOpen();
F-- 004372F0 00000081 void RingIsNotOpen();
F-- 00437380 000003CA void RingNotActive();
F-- 00437870 00000032 void RingActive();
F-- 004378B0 00000811 void Inv_AddItem();
F-- 00438250 00000129 void Inv_InsertItem();
F-- 00438380 00000077 void Inv_RequestItem();
F-- 00438400 0000001B void Inv_RemoveAllItems();
F-- 00438420 00000110 void Inv_RemoveItem();
F-- 00438530 000000DD void Inv_GetItemOption();
F-- 00438770 00000024 void RemoveInventoryText();
F-- 004387A0 0000010F void Inv_RingInit();
F-- 004388B0 00000060 void Inv_RingGetView();
F-- 00438910 00000191 void Inv_RingLight();
F-- 00438AB0 000002A7 void Inv_GlobeLight();
F-- 00438D60 0000002C void Inv_RingCalcAdders();
F-- 00438D90 0000013E void Inv_RingDoMotions();
F-- 00438ED0 0000002F void Inv_RingRotateLeft();
F-- 00438F00 0000002F void Inv_RingRotateRight();
F-- 00438F30 00000063 void Inv_RingMotionInit();
F-- 00438FA0 0000002C void Inv_RingMotionSetup();
F-- 00438FD0 00000026 void Inv_RingMotionRadius();
F-- 00439000 00000022 void Inv_RingMotionRotation();
F-- 00439030 00000025 void Inv_RingMotionCameraPos();
F-- 00439060 00000020 void Inv_RingMotionCameraPitch();
F-- 00439080 0000005D void Inv_RingMotionItemSelect();
F-- 004390E0 00000063 void Inv_RingMotionItemDeselect();
F-- 00439150 00000082 void Init_Requester();
F-- 004391E0 000000A3 void RemoveRequester();
F-- 00439290 0000001B void ReqItemCenteralign();
F-- 004392B0 00000054 void ReqItemLeftalign();
F-- 00439310 00000056 void ReqItemRightalign();
F-- 00439370 00000809 void Display_Requester();
F-- 00439B80 000000AA void SetRequesterHeading();
FS- 00439C30 00000013 void RemoveAllReqItems(REQUEST_INFO *req);
FS- 00439C50 000000C0 void ChangeRequesterItem(REQUEST_INFO *req, int32_t item, char *text1, uint32_t flags1, char *text2, uint32_t flags2);
FS- 00439D10 000000AC void AddRequesterItem(REQUEST_INFO *req, char *text1, uint32_t flags1, char *text2, uint32_t flags2);
F-- 00439DC0 00000039 void SetPCRequesterSize();
F-- 00439E00 0000005F void AddAssaultTime();
F-- 00439E60 0000005F void AddQuadbikeTime();
F-- 00439EC0 0000035A void ShowGymStatsText();
F-- 0043A220 00000386 void ShowStatsText();
F-- 0043A5B0 00000463 void ShowEndStatsScreen();
F-- 0043AA20 00000062 void sub_43AA20();
F-- 0043AA90 00000147 void KillItem();
F-- 0043ABE0 00000049 void sub_43ABE0();
F-- 0043AC30 00000201 void sub_43AC30();
F-- 0043AE40 000000A0 void sub_43AE40();
F-- 0043AEE0 00000080 void RemoveDrawnItem();
F-- 0043AF60 00000069 void AddActiveItem();
F-- 0043AFD0 000000AA void ItemNewRoom();
F-- 0043B080 00000080 void sub_43B080();
F-- 0043B100 00000030 void sub_43B100();
F-- 0043B130 0000006C void CreateEffect();
F-- 0043B1A0 000000EE void KillEffect();
F-- 0043B290 00000093 void EffectNewRoom();
F-- 0043B330 0000005B void sub_43B330();
F-- 0043B390 00000079 void sub_43B390();
F-- 0043B410 00000073 void sub_43B410();
F-- 0043B490 00000026 void sub_43B490();
F-- 0043B4C0 00000159 void sub_43B4C0();
F-- 0043B620 00000108 void sub_43B620();
F-- 0043B730 00000386 void sub_43B730();
F-- 0043BAC0 000001D6 void sub_43BAC0();
F-- 0043BCA0 0000005C void sub_43BCA0();
F-- 0043BD00 000000E1 void sub_43BD00();
F-- 0043BDF0 0000014B void sub_43BDF0();
F-- 0043BF40 0000067C void sub_43BF40();
F-- 0043C5C0 00000087 void sub_43C5C0();
F-- 0043C650 00000051 void sub_43C650();
F-- 0043C6B0 00000183 void sub_43C6B0();
F-- 0043C840 00000116 void sub_43C840();
F-- 0043C960 000002A0 void sub_43C960();
F-- 0043CC00 00000859 void sub_43CC00();
F-- 0043D4A0 000000A8 void sub_43D4A0();
F-- 0043D550 00000042 void sub_43D550();
F-- 0043D5A0 000001D5 void sub_43D5A0();
F-- 0043D780 00000139 void TestLaraSlide();
F-- 0043D8C0 000000BE void sub_43D8C0();
F-- 0043D980 0000036E void TestLaraVault();
F-- 0043DCF0 00000105 void sub_43DCF0();
F-- 0043DE00 00000032 void GetLaraCollisionInfo();
F-- 0043DE40 00000136 void LaraDeflectEdgeJump();
F-- 0043DFC0 000000AB void sub_43DFC0();
F-- 0043E0B0 000000F5 void sub_43E0B0();
F-- 0043E1C0 00000300 void sub_43E1C0();
F-- 0043E4E0 0000024A void sub_43E4E0();
F-- 0043E730 000000C1 void sub_43E730();
F-- 0043E800 00000212 void sub_43E800();
F-- 0043EA20 00000080 void sub_43EA20();
F-- 0043EAA0 000000F2 void sub_43EAA0();
F-- 0043EBA0 0000007A void sub_43EBA0();
F-- 0043EC20 000002D8 void sub_43EC20();
F-- 0043EF10 000000CE void sub_43EF10();
F-- 0043EFE0 000000EF void sub_43EFE0();
F-- 0043F0D0 00000075 void sub_43F0D0();
F-- 0043F150 00000064 void sub_43F150();
F-- 0043F1C0 00000028 void sub_43F1C0();
F-- 0043F1F0 00000064 void sub_43F1F0();
F-- 0043F260 000000C2 void sub_43F260();
F-- 0043F330 000000F5 void sub_43F330();
F-- 0043F430 000001CE void sub_43F430();
F-- 0043F600 00000119 void sub_43F600();
F-- 0043F720 00000149 void sub_43F720();
F-- 0043F870 000000E1 void TestWall();
F-- 0043F980 0000009B void LaraCollideStop();
F-- 0043FA40 00000029 void sub_43FA40();
F-- 0043FA70 00000115 void sub_43FA70();
F-- 0043FB90 00000078 void sub_43FB90();
F-- 0043FC10 00000053 void sub_43FC10();
F-- 0043FC70 00000217 void sub_43FC70();
F-- 0043FE90 00000045 void sub_43FE90();
F-- 0043FEE0 000000CD void sub_43FEE0();
F-- 0043FFB0 00000020 void sub_43FFB0();
F-- 0043FFD0 000000C9 void sub_43FFD0();
F-- 004400A0 00000092 void sub_4400A0();
F-- 00440140 000000DE void sub_440140();
F-- 00440220 00000058 void sub_440220();
F-- 00440280 00000070 void sub_440280();
F-- 004402F0 00000056 void sub_4402F0();
F-- 00440350 00000070 void sub_440350();
F-- 004403C0 00000039 void sub_4403C0();
F-- 00440400 00000099 void sub_440400();
F-- 004404A0 00000039 void sub_4404A0();
F-- 004404E0 00000018 void sub_4404E0();
F-- 00440500 00000013 void sub_440500();
F-- 00440520 00000440 void sub_440520();
F-- 00440960 000000BF void sub_440960();
F-- 00440A20 00000013 void sub_440A20();
F-- 00440A40 0000014F void sub_440A40();
F-- 00440B90 0000021E void sub_440B90();
F-- 00440DB0 000000D3 void sub_440DB0();
F-- 00440E90 0000008B void sub_440E90();
F-- 00440F20 00000175 void sub_440F20();
F-- 004410A0 00000057 void sub_4410A0();
F-- 00441100 0000009E void sub_441100();
F-- 004411A0 0000009E void sub_4411A0();
F-- 00441240 00000017 void sub_441240();
F-- 00441260 00000040 void sub_441260();
F-- 004412A0 00000065 void lara_as_hang();
F-- 00441310 0000001C void lara_as_reach();
F-- 00441330 0000000A void sub_441330();
F-- 00441340 0000010C void sub_441340();
F-- 00441450 00000084 void sub_441450();
F-- 004414E0 0000004B void sub_4414E0();
F-- 00441530 0000007C void sub_441530();
F-- 004415B0 0000007C void sub_4415B0();
F-- 00441630 0000002B void sub_441630();
F-- 00441660 0000004A void sub_441660();
F-- 004416B0 00000033 void sub_4416B0();
F-- 004416F0 00000033 void sub_4416F0();
F-- 00441730 0000002C void sub_441730();
F-- 00441760 00000038 void sub_441760();
F-- 004417A0 00000038 void sub_4417A0();
F-- 004417E0 00000018 void sub_4417E0();
F-- 00441800 00000033 void sub_441800();
F-- 00441840 0000002A void sub_441840();
F-- 00441870 00000033 void sub_441870();
F-- 004418B0 0000005B void sub_4418B0();
F-- 00441910 0000003C void sub_441910();
F-- 00441950 00000033 void sub_441950();
F-- 00441990 0000001D void sub_441990();
F-- 004419B0 00000035 void sub_4419B0();
F-- 004419F0 0000005A void sub_4419F0();
F-- 00441A50 0000000E void sub_441A50();
F-- 00441A60 00000018 void sub_441A60();
F-- 00441A80 0000017C void sub_441A80();
F-- 00441C00 00000099 void sub_441C00();
F-- 00441CA0 0000004C void sub_441CA0();
F-- 00441CF0 00000091 void sub_441CF0();
F-- 00441D90 00000013 void sub_441D90();
F-- 00441DB0 0000001D void sub_441DB0();
F-- 00441DD0 00000051 void sub_441DD0();
F-- 00441E30 0000004D void sub_441E30();
F-- 00441E80 0000007E void sub_441E80();
F-- 00441F00 00000088 void sub_441F00();
F-- 00441F90 000001A7 void sub_441F90();
F-- 00442140 00000189 void sub_442140();
F-- 004422D0 000000DA void lara_col_forward_jump();
F-- 004423B0 000000DA void sub_4423B0();
F-- 00442490 000000EB void sub_442490();
F-- 00442580 00000013 void sub_442580();
F-- 004425A0 00000068 void sub_4425A0();
F-- 00442610 0000009F void sub_442610();
F-- 004426B0 0000017E void sub_4426B0();
F-- 00442830 000000AA void sub_442830();
F-- 004428E0 0000006C void sub_4428E0();
F-- 00442950 00000013 void sub_442950();
F-- 00442970 0000009C void sub_442970();
F-- 00442A10 0000013D void sub_442A10();
F-- 00442B50 000000D4 void sub_442B50();
F-- 00442C30 00000013 void sub_442C30();
F-- 00442C50 0000001E void sub_442C50();
F-- 00442C70 00000023 void sub_442C70();
F-- 00442CA0 00000023 void sub_442CA0();
F-- 00442CD0 00000023 void sub_442CD0();
F-- 00442D00 00000086 void sub_442D00();
F-- 00442D90 00000033 void sub_442D90();
F-- 00442DD0 00000033 void sub_442DD0();
F-- 00442E10 00000023 void sub_442E10();
F-- 00442E40 00000013 void sub_442E40();
F-- 00442E60 00000097 void sub_442E60();
F-- 00442F00 000000CC void sub_442F00();
F-- 00442FD0 0000006C void sub_442FD0();
F-- 00443040 0000007C void lara_col_fastdive();
F-- 004430C0 000001C4 void sub_4430C0();
F-- 00443290 00000049 void sub_443290();
F-- 004432E0 00000077 void sub_4432E0();
F-- 00443360 00000863 void GetLaraHandAbsPosition();
F-- 00443C10 00000083 void sub_443C10();
F-- 00443CA0 000009FD void sub_443CA0();
F-- 004446E0 00000084 void sub_4446E0();
F-- 00444770 00000086 void sub_444770();
F-- 00444800 00000097 void sub_444800();
F-- 004448A0 000000D4 void sub_4448A0();
F-- 00444980 0000029F void sub_444980();
F-- 00444C20 000000EB void LaraLandedBad();
F-- 00444D10 0000006A void LaraHitCeiling();
F-- 00444D80 00000075 void sub_444D80();
F-- 00444E00 0000007E void sub_444E00();
F-- 00444E80 00000054 void LaraFallen();
F-- 00444EE0 000000AD void sub_444EE0();
F-- 00444F90 00000082 void LaraDeflectEdge();
F-- 00445020 00000222 void sub_445020();
F-- 00445250 00000034 void draw_shotgun_meshes();
F-- 00445290 0000002B void undraw_shotgun_meshes();
F-- 004452C0 00000071 void ready_shotgun();
F-- 00445340 00000214 void RifleHandler();
F-- 00445560 000001FB void FireShotgun();
F-- 00445760 000000C0 void FireM16();
F-- 00445820 00000185 void FireHarpoon();
F-- 004459B0 00000595 void ControlHarpoonBolt();
F-- 00445F50 0000028B void FireRocket();
F-- 004461E0 000009B3 void ControlRocket();
F-- 00446BA0 00000230 void FireGrenade();
F-- 00446DD0 000007F8 void sub_446DD0();
F-- 004475D0 00000198 void sub_4475D0();
F-- 00447770 00000109 void sub_447770();
F-- 00447880 000004E7 void AnimateShotgun();
F-- 00447D90 00000192 void sub_447D90();
F-- 00447F30 0000009E void sub_447F30();
F-- 00447FD0 00000078 void sub_447FD0();
F-- 00448050 00000275 void sub_448050();
F-- 004482D0 00000071 void sub_4482D0();
F-- 00448350 00000059 void draw_pistol_meshes();
F-- 004483B0 00000041 void sub_4483B0();
F-- 00448400 0000003B void sub_448400();
F-- 00448440 00000205 void sub_448440();
F-- 00448650 00000582 void AnimatePistols();
F-- 00448BE0 00000280 void sub_448BE0();
F-- 00448E60 00000229 void sub_448E60();
F-- 00449090 000000B0 void sub_449090();
F-- 00449140 00000038 void sub_449140();
F-- 00449180 00000038 void sub_449180();
F-- 004491C0 00000078 void sub_4491C0();
F-- 00449240 00000017 void sub_449240();
F-- 00449260 00000021 void sub_449260();
F-- 00449290 00000017 void sub_449290();
F-- 004492B0 0000005D void sub_4492B0();
F-- 00449310 000000CC void sub_449310();
F-- 004493E0 000000EF void sub_4493E0();
F-- 004494D0 00000059 void sub_4494D0();
F-- 00449530 0000020D void sub_449530();
F-- 00449740 0000014C void sub_449740();
F-- 00449890 0000019D void sub_449890();
F-- 00449A30 0000017F void sub_449A30();
F-- 00449BB0 0000055A void LaraGun();
F-- 0044A1A0 0000003B void CheckForHoldingState();
F-- 0044A1E0 0000011D void InitialiseNewWeapon();
F-- 0044A330 00000194 void LaraTargetInfo();
F-- 0044A4D0 0000022D void LaraGetNewTarget();
F-- 0044A700 000000AA void find_target_point();
F-- 0044A7B0 000000D1 void AimWeapon();
F-- 0044A890 00000572 void FireWeapon();
F-- 0044AE20 000000B9 void HitTarget();
F-- 0044AEE0 0000006A void sub_44AEE0();
F-- 0044AF50 00000043 void WeaponObject();
F-- 0044AFB0 0000098C void DoProperDetection();
F-- 0044B940 000001AF void DoFlareLight();
F-- 0044BAF0 000000DA void DoFlareInHand();
F-- 0044BBD0 000001B8 void DrawFlareInAir();
F-- 0044BD90 000001E2 void CreateFlare();
F-- 0044BF80 0000004B void set_flare_arm();
F-- 0044BFD0 00000175 void draw_flare();
F-- 0044C150 00000269 void undraw_flare();
F-- 0044C3C0 00000018 void draw_flare_meshes();
F-- 0044C3E0 00000018 void undraw_flare_meshes();
F-- 0044C400 0000003E void ready_flare();
F-- 0044C440 000001E5 void FlareControl();
F-- 0044C630 000000B7 void sub_44C630();
F-- 0044C6F0 000008A4 void LaraControl();
F-- 0044CFC0 0000009C void LaraCheat();
F-- 0044D060 00000129 void sub_44D060();
F-- 0044D1A0 000000FF void sub_44D1A0();
F-- 0044D2A0 000003B1 void AnimateLara();
F-- 0044D690 00000164 void UseItem();
F-- 0044D880 0000001F void sub_44D880();
F-- 0044D8A0 00000024 void InitialiseLaraLoad();
F-- 0044D8D0 0000032C void InitialiseLara();
F-- 0044DC00 00000443 void LaraInitialiseMeshes();
F-- 0044E050 00000170 void sub_44E050();
F-- 0044E1C0 00000070 void sub_44E1C0();
F-- 0044E230 0000005E void sub_44E230();
F-- 0044E290 00000060 void sub_44E290();
F-- 0044E2F0 00000060 void sub_44E2F0();
F-- 0044E350 000000B9 void sub_44E350();
F-- 0044E410 00000032 void sub_44E410();
F-- 0044E450 00000215 void sub_44E450();
F-- 0044E670 000000FA void sub_44E670();
F-- 0044E770 000000EF void sub_44E770();
F-- 0044E860 00000023 void sub_44E860();
F-- 0044E890 00000023 void sub_44E890();
F-- 0044E8C0 00000023 void sub_44E8C0();
F-- 0044E8F0 00000057 void sub_44E8F0();
F-- 0044E950 0000024B void sub_44E950();
F-- 0044EBA0 0000006B void sub_44EBA0();
F-- 0044EC10 00000086 void sub_44EC10();
F-- 0044ECA0 00000076 void sub_44ECA0();
F-- 0044ED20 00000085 void sub_44ED20();
F-- 0044EDB0 00000014 void sub_44EDB0();
F-- 0044EDD0 00000053 void sub_44EDD0();
F-- 0044EE30 0000000B void sub_44EE30();
F-- 0044EE40 00000013 void sub_44EE40();
F-- 0044EE60 0000015C void sub_44EE60();
F-- 0044EFC0 000000D1 void sub_44EFC0();
F-- 0044F0A0 00000013 void sub_44F0A0();
F-- 0044F0C0 00000013 void sub_44F0C0();
F-- 0044F0E0 00000013 void sub_44F0E0();
F-- 0044F100 0000005B void sub_44F100();
F-- 0044F160 00000013 void sub_44F160();
F-- 0044F180 0000018F void sub_44F180();
F-- 0044F310 0000026D void sub_44F310();
F-- 0044F580 00000213 void sub_44F580();
F-- 0044F7A0 00000063 void sub_44F7A0();
F-- 0044F810 0000001F void sub_44F810();
F-- 0044F830 0000014C void sub_44F830();
F-- 0044F980 0000023A void sub_44F980();
F-- 0044FBC0 000007D3 void LizManControl();
F-- 004503E0 00000240 void sub_4503E0();
F-- 00450620 000001D5 void sub_450620();
F-- 00450800 00000DF7 void LondonBossControl();
F-- 00451640 00000060 void S_DrawLondonBoss();
F-- 004516A0 00000089 void InitialiseLondonBoss();
F-- 00451730 0000024F void sub_451730();
F-- 00451980 0000012E void sub_451980();
F-- 00451AB0 0000032E void sub_451AB0();
F-- 00451DE0 0000009F void sub_451DE0();
F-- 00451E80 00000208 void sub_451E80();
F-- 00452090 000001A9 void sub_452090();
F-- 00452240 0000017A void sub_452240();
F-- 004523C0 00000AFB void LondSecControl();
F-- 00452F10 0000007C void sub_452F10();
F-- 00452F90 00000068 void sub_452F90();
F-- 00453000 000001EE void sub_453000();
F-- 004531F0 00000138 void sub_4531F0();
F-- 00453460 000000F7 void sub_453460();
F-- 00453560 0000004B void sub_453560();
F-- 004535B0 00000183 void sub_4535B0();
F-- 00453740 000000F8 void sub_453740();
F-- 00453890 00000098 void CartGetCollision();
F-- 00453930 00000027 void sub_453930();
F-- 00453960 0000014D void MineCartCollision();
F-- 00453AB0 000000C1 void GetInMineCart();
F-- 00453B80 00000117 void MineCartControl();
F-- 00453CA0 0000052B void MoveCart();
F-- 004541F0 000000A8 void sub_4541F0();
F-- 004542A0 00000903 void CartDoUserInput();
F-- 00454C00 0000010E void CartCanGetOut();
F-- 00454D10 00000292 void CardToBaddieCollision();
F-- 00454FB0 00000308 void sub_454FB0();
F-- 004552C0 000000A7 void sub_4552C0();
F-- 00455370 0000042B void ExplodingDeath();
F-- 004557A0 0000020E void sub_4557A0();
F-- 004559B0 00000052 void InitialiseMonkey();
F-- 00455A10 0000041E void DrawMonkey();
F-- 00455E30 00000CB9 void MonkeyControl();
F-- 00456B50 00000050 void sub_456B50();
F-- 00456BA0 00000225 void sub_456BA0();
F-- 00456DD0 0000016F void sub_456DD0();
F-- 00456F40 0000027C void sub_456F40();
F-- 004571E0 000001A3 void sub_4571E0();
F-- 004573A0 0000004E void sub_4573A0();
F-- 004573F0 0000028F void sub_4573F0();
F-- 00457690 000000C3 void sub_457690();
F-- 00457760 00000025 void sub_457760();
F-- 00457790 0000006B void sub_457790();
F-- 00457800 0000023F void sub_457800();
F-- 00457A40 00000BD3 void MPGunControl();
F-- 00458660 00000190 void sub_458660();
F-- 004587F0 00000049 void sub_4587F0();
F-- 00458840 0000003F void sub_458840();
F-- 00458880 00000221 void sub_458880();
F-- 00458AB0 000000DE void sub_458AB0();
F-- 00458B90 00000083 void sub_458B90();
F-- 00458C20 000000FA void sub_458C20();
F-- 00458D20 0000009A void sub_458D20();
F-- 00458DC0 00000042 void sub_458DC0();
F-- 00458E10 00000032 void sub_458E10();
F-- 00458E50 0000040F void sub_458E50();
F-- 00459260 000000CC void sub_459260();
F-- 00459330 000000B1 void sub_459330();
F-- 004593F0 00000052 void sub_4593F0();
F-- 00459450 0000003B void sub_459450();
F-- 00459490 0000002F void sub_459490();
F-- 004594C0 00000039 void sub_4594C0();
F-- 00459500 000000D8 void sub_459500();
F-- 004595E0 00000179 void sub_4595E0();
F-- 00459760 0000003F void sub_459760();
F-- 004597A0 00000035 void sub_4597A0();
F-- 004597E0 00000038 void sub_4597E0();
F-- 00459820 0000001B void sub_459820();
F-- 00459840 0000003B void sub_459840();
F-- 00459880 00000052 void sub_459880();
F-- 004598E0 00000035 void sub_4598E0();
F-- 00459920 00000051 void sub_459920();
F-- 00459980 00000034 void sub_459980();
F-- 004599C0 00000090 void sub_4599C0();
F-- 00459A50 00000071 void sub_459A50();
F-- 00459AD0 0000002E void sub_459AD0();
F-- 00459B00 000000F4 void sub_459B00();
F-- 00459C00 00000084 void sub_459C00();
F-- 00459C90 00000041 void sub_459C90();
F-- 00459CE0 0000010A void sub_459CE0();
F-- 00459DF0 00000072 void sub_459DF0();
F-- 00459E70 00000B35 void OilRedControl();
F-- 0045AA00 00000052 void InitialiseOilSMG();
F-- 0045AA60 000007C8 void OilSMGControl();
F-- 0045B260 000002DC void OrcaControl();
F-- 0045B540 000000C4 void sub_45B540();
F-- 0045B610 000000D2 void sub_45B610();
F-- 0045B6F0 00000005 void sub_45B6F0();
F-- 0045B700 000000B9 void sub_45B700();
F-- 0045B7C0 000000A7 void sub_45B7C0();
F-- 0045B870 00000384 void sub_45B870();
F-- 0045BC00 00000563 void PickUpCollision();
F-- 0045C170 00000289 void sub_45C170();
F-- 0045C400 00000107 void SwitchCollision2();
F-- 0045C510 0000019D void sub_45C510();
F-- 0045C6B0 0000023E void sub_45C6B0();
F-- 0045C900 00000332 void sub_45C900();
F-- 0045CC60 0000004B void sub_45CC60();
F-- 0045CCB0 00000096 void sub_45CCB0();
F-- 0045CD50 00000048 void sub_45CD50();
F-- 0045CDA0 0000003E void sub_45CDA0();
F-- 0045CDE0 00000084 void sub_45CDE0();
F-- 0045CE70 0000017B void sub_45CE70();
F-- 0045CFF0 00000052 void InitialisePrisoner();
F-- 0045D050 00000B2B void PrisonerControl();
F-- 0045DBD0 00000052 void InitialisePunk();
F-- 0045DC30 00000961 void PunkControl();
F-- 0045E5E0 000001F1 void sub_45E5E0();
F-- 0045E7E0 0000004B void sub_45E7E0();
F-- 0045E830 000001A8 void sub_45E830();
F-- 0045E9E0 0000013E void sub_45E9E0();
F-- 0045EB20 000002F1 void sub_45EB20();
F-- 0045EE20 00000581 void QuadBikeControl();
F-- 0045F3C0 000000CE void QuadbikeExplode();
F-- 0045F490 000001AF void sub_45F490();
F-- 0045F640 000000DF void SkidooTestHeight();
F-- 0045F720 00000054 void QuadBikeDoDynamics();
F-- 0045F780 0000082E void SkidooDynamics();
F-- 0045FFB0 000001E9 void SkidooBaddieCollision();
F-- 004601A0 00000090 void SkidoGetCollisionAnim();
F-- 00460230 00000430 void AnimateQuadBike();
F-- 004606A0 00000100 void CanGetOff();
F-- 004607A0 00000429 void QuadBikeUserControl();
F-- 00460BD0 000001C7 void TriggerExhaustSmoke();
F-- 00460DA0 0000026B void sub_460DA0();
F-- 00461010 00000025 void sub_461010();
F-- 00461040 000006DE void RaptorControl();
F-- 00461740 000001F5 void MouseControl();
F-- 00461950 00000102 void sub_461950();
F-- 00461A60 000000F0 void ModifyStartInfo();
F-- 00461B50 0000027A void CreateStartInfo();
F-- 00461DD0 00000618 void CreateSaveGameInfo();
F-- 004623F0 000009F2 void sub_4623F0();
F-- 00462DF0 00000015 void sub_462DF0();
F-- 00462E10 0000004C void sub_462E10();
F-- 00462E60 00000035 void sub_462E60();
F-- 00462EA0 00000613 void SealmuteControl();
F-- 004634C0 0000023F void sub_4634C0();
F-- 00463700 000001E7 void sub_463700();
F-- 004638F0 0000020A void InitialiseLevel();
F-- 00463B00 00000065 void sub_463B00();
F-- 00463B70 00000049 void InitialiseLevelFlags();
F-- 00463BC0 0000006D void InitialiseObjects();
F-- 00463C30 0000160B void Baddy_Objects();
F-- 00465240 000005D6 void sub_465240();
F-- 00465820 00000C89 void sub_465820();
F-- 004664B0 000000D7 void sub_4664B0();
F-- 00466590 00000128 void sub_466590();
F-- 004666C0 000002CC void sub_4666C0();
F-- 00466990 00000468 void DrawShiva();
F-- 00466E00 00000203 void sub_466E00();
F-- 00467010 0000005F void InitialiseShiva();
F-- 00467070 000006DE void ShivaControl();
F-- 00467780 000000B4 void sub_467780();
F-- 00467840 000004B0 void SoundEffect();
F-- 00467D00 0000005E void StopSoundEffect();
F-- 00467D60 00000086 void SOUND_EndScene();
F-- 00467DF0 00000024 void SOUND_Stop();
F-- 00467E20 00000020 void sub_467E20();
F-- 00467E40 00000128 void TestCollision();
F-- 00467F70 000002DD void GetSpheres();
F-- 00468250 0000032F void GetJointAbsPosition();
F-- 00468580 00000034 void sub_468580();
F-- 004685C0 0000004A void sub_4685C0();
F-- 00468610 00000162 void sub_468610();
F-- 00468780 000000C8 void sub_468780();
F-- 00468850 000003BE void sub_468850();
F-- 00468C10 000003F8 void sub_468C10();
F-- 00469010 00000138 void sub_469010();
F-- 00469150 000001CE void sub_469150();
F-- 00469320 00000630 void sub_469320();
F-- 00469980 000000FA void sub_469980();
F-- 00469A80 0000026A void sub_469A80();
F-- 00469CF0 000000E7 void sub_469CF0();
F-- 00469DE0 0000002A void sub_469DE0();
F-- 00469E10 0000016E void sub_469E10();
F-- 00469F80 0000005D void InitialiseSwat();
F-- 00469FE0 0000089D void SwatControl();
F-- 0046A8B0 000000A4 void sub_46A8B0();
F-- 0046A960 00000289 void TargetControl();
F-- 0046AC00 00000062 void sub_46AC00();
F-- 0046AC70 0000002C void T_InitPrint();
F-- 0046ACA0 000000E2 void T_Print();
F-- 0046AD90 00000037 void T_ChangeText();
F-- 0046ADD0 0000002B void sub_46ADD0();
F-- 0046AE00 00000090 void sub_46AE00();
F-- 0046AE90 00000010 void sub_46AE90();
F-- 0046AEA0 00000029 void sub_46AEA0();
F-- 0046AED0 00000010 void sub_46AED0();
F-- 0046AEE0 0000001E void T_CentreH();
F-- 0046AF00 0000001E void sub_46AF00();
F-- 0046AF20 0000001E void T_RightAlign();
F-- 0046AF40 0000001E void T_BottomAlign();
F-- 0046AF60 0000012E void T_GetTextWidth();
F-- 0046B090 00000025 void T_RemovePrint();
F-- 0046B0C0 00000024 void sub_46B0C0();
F-- 0046B0F0 00000027 void T_DrawText();
F-- 0046B120 0000021F void sub_46B120();
F-- 0046B340 000003A6 void sub_46B340();
F-- 0046B6F0 0000002A void GetTextScaleH();
F-- 0046B720 0000002A void sub_46B720();
F-- 0046B750 000002F0 void TigerControl();
F-- 0046BA60 00000603 void TonyBossControl();
F-- 0046C080 00000041 void S_DrawTonyBoss();
F-- 0046C0D0 00000042 void sub_46C0D0();
F-- 0046C120 0000009D void InitialiseTonyBoss();
F-- 0046C1C0 00000297 void sub_46C1C0();
F-- 0046C460 000001D4 void sub_46C460();
F-- 0046C640 0000021D void sub_46C640();
F-- 0046C860 0000049E void sub_46C860();
F-- 0046CD00 00000239 void sub_46CD00();
F-- 0046CF40 0000020F void TrainControl();
F-- 0046D150 0000009F void TrainTestHeight();
F-- 0046D1F0 00000147 void sub_46D1F0();
F-- 0046D340 000001BD void PropellerControl();
F-- 0046D500 00000150 void sub_46D500();
F-- 0046D650 00000169 void ControlSpikewall();
F-- 0046D7C0 0000008D void sub_46D7C0();
F-- 0046D850 0000016F void sub_46D850();
F-- 0046D9C0 00000123 void sub_46D9C0();
F-- 0046DAF0 00000040 void sub_46DAF0();
F-- 0046DB30 00000098 void sub_46DB30();
F-- 0046DBD0 0000004C void sub_46DBD0();
F-- 0046DC20 000000E2 void sub_46DC20();
F-- 0046DD10 00000040 void sub_46DD10();
F-- 0046DD50 00000389 void RollingBallControl();
F-- 0046E0E0 00000259 void RollingBallCollision();
F-- 0046E340 00000089 void SpikeControl();
F-- 0046E3D0 0000015E void SpikeCollision();
F-- 0046E530 00000053 void sub_46E530();
F-- 0046E590 0000005C void sub_46E590();
F-- 0046E5F0 00000045 void sub_46E5F0();
F-- 0046E640 000000A3 void sub_46E640();
F-- 0046E6F0 000001A0 void sub_46E6F0();
F-- 0046E890 00000114 void sub_46E890();
F-- 0046E9B0 00000048 void sub_46E9B0();
F-- 0046EA00 00000044 void sub_46EA00();
F-- 0046EA50 000000C8 void TeethTrap();
F-- 0046EB20 000000EE void FallingCeiling();
F-- 0046EC10 000001BD void sub_46EC10();
F-- 0046EDD0 00000166 void DartsControl();
F-- 0046EF40 000000A8 void SideFlameEmitterControl();
F-- 0046EFF0 0000009C void FlameEmitterControl();
F-- 0046F090 0000009C void sub_46F090();
F-- 0046F130 000000AE void sub_46F130();
F-- 0046F1E0 00000183 void SideFlameDetection();
F-- 0046F370 00000770 void FlameControl();
F-- 0046FAE0 00000049 void LaraBurn();
F-- 0046FB30 00000096 void LavaBurn();
F-- 0046FBD0 000001AC void sub_46FBD0();
F-- 0046FD80 0000077C void DinoControl();
F-- 00470530 00000610 void TribeAxeControl();
F-- 00470B70 00000774 void TribeBossControl();
F-- 004712F0 0000005D void S_DrawTribeBoss();
F-- 00471350 000001C5 void sub_471350();
F-- 00471520 00000042 void sub_471520();
F-- 00471570 00000105 void InitialiseTribeBoss();
F-- 00471680 000002B1 void sub_471680();
F-- 00471960 000000C1 void sub_471960();
F-- 00471A30 00000195 void sub_471A30();
F-- 00471BD0 00000256 void sub_471BD0();
F-- 00471E30 0000017D void sub_471E30();
F-- 00471FB0 0000004A void sub_471FB0();
F-- 00472000 00000C05 void WillardBossControl();
F-- 00472CE0 0000003A void S_DrawWillardBoss();
F-- 00472D20 00000035 void InitialiseWillardBoss();
F-- 00472D60 0000027E void sub_472D60();
F-- 00472FE0 000001C7 void sub_472FE0();
F-- 004731B0 0000007A void WillTriggerPlasmaBall();
F-- 00473230 0000033F void ControlWillbosPlasmaBall();
F-- 00473570 00000210 void sub_473570();
F-- 00473780 0000005E void InitialiseWingmute();
F-- 004737E0 0000039D void WingmuteControl();
F-- 00473BA0 00000163 void sub_473BA0();
F-- 00473D10 000003AD void WinstonControl();
F-- 00474110 00000185 void OldWinstonControl();
F-- 004742A0 00000090 void sub_4742A0();
F-- 00474330 00000427 void sub_474330();
F-- 00474760 00000143 void sub_474760();
F-- 004748B0 0000002E void sub_4748B0();
F-- 004748E0 0000001B void sub_4748E0();
F-- 00474900 0000022E void sub_474900();
F-- 00474B30 00000213 void sub_474B30();
F-- 00474D50 00000019 void sub_474D50();
F-- 00474D70 000003DC void StartAddress();
F-- 00475160 000000D6 void sub_475160();
F-- 00475240 00000036 void sub_475240();
F-- 00475280 00000032 void sub_475280();
F-- 004752D0 00000012 void sub_4752D0();
F-- 00475380 00000039 void sub_475380();
F-- 00475400 00000022 void sub_475400();
F-- 00475450 0000005A void sub_475450();
F-- 004754B0 000000F3 void sub_4754B0();
F-- 004755B0 000000C9 void sub_4755B0();
F-- 00475680 00000029 void sub_475680();
F-- 004756B0 00000003 void sub_4756B0();
F-- 004756C0 0000002D void sub_4756C0();
F-- 004756F0 00000029 void sub_4756F0();
F-- 00475700 0000001F void sub_475700();
F-- 00475720 00000062 void sub_475720();
F-- 00475790 00000062 void sub_475790();
F-- 00475800 0000010C void sub_475800();
F-- 00475910 00000034 void TempVideoAdjust();
F-- 00475950 00000039 void TempVideoRemove();
F-- 00475990 00000035 void S_FadeInInventory();
F-- 004759D0 00000027 void S_FadeOutInventory();
F-- 00475A00 0000026F void S_DrawDashBar();
F-- 00475C70 000002EC void S_DrawHealthBar();
F-- 00475F60 0000025C void S_DrawAirBar();
F-- 004761C0 00000257 void S_DrawColdBar();
F-- 00476420 00000609 void sub_476420();
F-- 00476A30 00000261 void sub_476A30();
F-- 00476CA0 00000920 void sub_476CA0();
F-- 004775C0 00000666 void sub_4775C0();
F-- 00477C30 000009CA void sub_477C30();
F-- 00478600 000005EF void sub_478600();
F-- 00478BF0 0000091C void sub_478BF0();
F-- 00479510 000002FD void sub_479510();
F-- 00479810 00000402 void sub_479810();
F-- 00479C20 00000882 void sub_479C20();
F-- 0047A4B0 000005C1 void sub_47A4B0();
F-- 0047AA80 00000835 void sub_47AA80();
F-- 0047B2C0 000007D3 void sub_47B2C0();
F-- 0047BAA0 00000800 void sub_47BAA0();
F-- 0047C2A0 0000096A void sub_47C2A0();
F-- 0047CC10 00000882 void sub_47CC10();
F-- 0047D4A0 00000CD0 void sub_47D4A0();
F-- 0047E170 00000AB7 void sub_47E170();
F-- 0047EC30 0000088B void sub_47EC30();
F-- 0047F4C0 00000762 void sub_47F4C0();
F-- 0047FC30 00000882 void sub_47FC30();
F-- 004804D0 00000012 void sub_4804D0();
F-- 00480580 00000039 void sub_480580();
F-- 00480600 0000002E void sub_480600();
F-- 00480630 0000010E void sub_480630();
F-- 00480740 00000045 void sub_480740();
F-- 00480790 0000011D void sub_480790();
F-- 004808B0 00000039 void sub_4808B0();
F-- 004808F0 0000002C void sub_4808F0();
F-- 00480920 00000031 void sub_480920();
F-- 00480960 0000002F void sub_480960();
F-- 004809C0 00000005 void sub_4809C0();
F-- 004809D0 0000009C void sub_4809D0();
F-- 00480A70 0000001A void sub_480A70();
F-- 00480A90 000000E2 void sub_480A90();
F-- 00480B80 00000091 void sub_480B80();
F-- 00480C20 0000001C void sub_480C20();
F-- 00480C40 000000CE void sub_480C40();
F-- 00480D10 0000002A void sub_480D10();
F-- 00480D40 0000000E void sub_480D40();
F-- 00480D50 00000049 void MyReadFile();
F-- 00480DA0 000001C1 void sub_480DA0();
F-- 00480F70 000003F0 void sub_480F70();
F-- 00481360 0000006E void sub_481360();
F-- 004813D0 000004BE void LoadObjects();
F-- 00481890 00000136 void sub_481890();
F-- 004819D0 000001E1 void sub_4819D0();
F-- 00481BC0 000000DA void sub_481BC0();
F-- 00481CA0 000000AD void sub_481CA0();
F-- 00481D50 00000060 void sub_481D50();
F-- 00481DB0 00000060 void sub_481DB0();
F-- 00481E10 00000206 void sub_481E10();
F-- 00482020 0000011C void sub_482020();
F-- 00482140 00000079 void sub_482140();
F-- 004821C0 0000008A void sub_4821C0();
F-- 00482250 0000009A void sub_482250();
F-- 004822F0 00000265 void sub_4822F0();
F-- 00482560 00000036 void sub_482560();
F-- 004825A0 00000026 void str_to_wstr();
F-- 004825D0 000000EA void sub_4825D0();
F-- 004826C0 00000248 void sub_4826C0();
F-- 00482910 0000007D void S_LoadLevelFile();
F-- 00482990 0000002A void sub_482990();
F-- 004829C0 000000C6 void sub_4829C0();
F-- 00482A90 000006D1 void sub_482A90();
F-- 00483170 000002F5 void sub_483170();
F-- 00483470 00000048 void sub_483470();
F-- 004834C0 0000007A void sub_4834C0();
F-- 00483540 00000097 void sub_483540();
F-- 004835E0 00000023 void sub_4835E0();
F-- 00483610 00000039 void S_DrawScreenLine();
F-- 00483650 00000116 void S_DrawScreenBox();
F-- 00483770 0000003D void S_DrawScreenFBox();
F-- 004837B0 0000000F void sub_4837B0();
F-- 004837C0 00000001 void nullsub_1();
F-- 004837D0 00000057 void sub_4837D0();
F-- 00483830 0000000E void sub_483830();
F-- 00483840 00000013 void sub_483840();
F-- 00483860 0000007A void mGetAngle();
F-- 004838E0 00000073 void sub_4838E0();
F-- 00483960 0000013F void StartGame();
F-- 00483AA0 000000A4 void GameLoop();
F-- 00483B50 00000006 void LevelCompleteSequence();
F-- 00483B60 00000435 void LevelStats();
F-- 00483FA0 00000033 void sub_483FA0();
F-- 00483FE0 00000030 void sub_483FE0();
F-- 00484010 000001D4 void GameStats();
FS- 004841F0 0000001E int32_t GetRandomControl();
FS- 00484210 0000000A void SeedRandomControl(int32_t seed);
FS- 00484220 0000001E int32_t GetRandomDraw();
FS- 00484240 0000000A void SeedRandomDraw(int32_t seed);
FS- 00484250 00000044 void GetValidLevelsList(REQUEST_INFO *req);
F-- 004842A0 0000004C void sub_4842A0();
F-- 004842F0 00000112 void DisplayCredits();
F-- 00484410 00000165 void S_FrontEndCheck();
F-- 00484580 00000114 void S_SaveGame();
F-- 004846A0 00000096 void sub_4846A0();
F-- 00484740 000002C1 void sub_484740();
F-- 00484A10 0000000B void sub_484A10();
F-- 00484A20 0000001F void sub_484A20();
F-- 00484A40 00000040 void sub_484A40();
F-- 00484A80 00000059 void sub_484A80();
F-- 00484AE0 00000088 void HWR_EnableZBuffer();
F-- 00484B70 00000079 void sub_484B70();
F-- 00484BF0 0000003F void sub_484BF0();
F-- 00484C30 000001A2 void sub_484C30();
F-- 00484DE0 0000003F void sub_484DE0();
F-- 00484E20 00000082 void sub_484E20();
F-- 00484EB0 0000006C void sub_484EB0();
F-- 00484F00 00000006 void sub_484F00();
F-- 00484F10 000001FC void sub_484F10();
F-- 00485130 00000200 void sub_485130();
F-- 00485350 00000153 void sub_485350();
F-- 004854C0 000000EC void sub_4854C0();
F-- 004855C0 00000335 void sub_4855C0();
F-- 00485900 000000B3 void sub_485900();
F-- 004859C0 00000044 void sub_4859C0();
F-- 00485A10 0000006E void sub_485A10();
F-- 00485A90 00000012 void sub_485A90();
F-- 00485AB0 000001ED void sub_485AB0();
F-- 00485CA0 00000037 void sub_485CA0();
F-- 00485CE0 000001B7 void sub_485CE0();
F-- 00485EA0 000000B1 void sub_485EA0();
F-- 00485F60 00000021 void sub_485F60();
F-- 00485F90 0000006C void game_malloc();
F-- 00486010 00000034 void sub_486010();
F-- 00486050 000000E8 void sub_486050();
F-- 00486140 00000120 void Key();
F-- 00486260 0000047B void S_UpdateInput();
F-- 004866E0 000004BC void sub_4866E0();
F-- 00486BA0 000009AA void S_CalculateLight();
F-- 00487550 00000032 void sub_487550();
F-- 00487590 0000018F void sub_487590();
F-- 00487720 00000021 void sub_487720();
F-- 00487750 0000008C void do_inventory_options();
F-- 00487870 00000368 void sub_487870();
F-- 00487BE0 00000678 void sub_487BE0();
F-- 00488260 00000CAF void sub_488260();
F-- 00488F30 0000049D void sub_488F30();
F-- 004893D0 000000C0 void sub_4893D0();
F-- 00489490 0000007E void sub_489490();
F-- 00489510 00000040 void sub_489510();
F-- 00489550 00000706 void sub_489550();
F-- 00489C70 0000048D void sub_489C70();
F-- 0048A100 00000096 void sub_48A100();
F-- 0048A1A0 00000043 void sub_48A1A0();
F-- 0048A1F0 00000006 void sub_48A1F0();
F-- 0048A200 00000006 void sub_48A200();
F-- 0048A210 0000008C void S_InitialisePolyList();
F-- 0048A2A0 0000002D void S_DumpCine();
F-- 0048A2D0 0000004E void S_DumpScreen();
F-- 0048A320 0000000B void S_ClearScreen();
F-- 0048A330 00000036 void sub_48A330();
F-- 0048A370 0000014A void S_OutputPolyList();
F-- 0048A4C0 0000029C void S_GetObjectBounds();
F-- 0048A760 00000045 void sub_48A760();
F-- 0048A7B0 000001F3 void sub_48A7B0();
F-- 0048A9B0 00000044 void sub_48A9B0();
F-- 0048AA00 000000C0 void sub_48AA00();
F-- 0048AAC0 00000051 void sub_48AAC0();
F-- 0048AB20 00000021 void S_SetupAboveWater();
F-- 0048AB50 000000AB void S_AnimateTextures();
F-- 0048AC00 00000010 void sub_48AC00();
F-- 0048AC10 0000000D void sub_48AC10();
F-- 0048AC20 00000097 void sub_48AC20();
F-- 0048ACC0 0000009D void sub_48ACC0();
F-- 0048AD60 00000011 void sub_48AD60();
F-- 0048AD80 00000011 void sub_48AD80();
F-- 0048ADA0 00000223 void sub_48ADA0();
F-- 0048AFD0 000000FE void sub_48AFD0();
F-- 0048B0D0 000000B8 void LoadPicture();
F-- 0048B190 000000E0 void sub_48B190();
F-- 0048B270 0000008E void MemBlt();
F-- 0048B300 00000068 void sub_48B300();
F-- 0048B370 0000042D void sub_48B370();
F-- 0048B7A0 00000284 void DrawTile();
F-- 0048BA30 00000232 void DrawPicture();
F-- 0048BC70 0000009D void FadePictureUp();
F-- 0048BD10 00000144 void FadePictureDown();
F-- 0048BE60 000000DE void CreateMonoScreen();
F-- 0048BF40 000000C5 void sub_48BF40();
F-- 0048C010 00000016 void DrawMonoScreen();
F-- 0048C030 00000035 void RemoveMonoScreen();
F-- 0048C070 00000022 void DoInventoryPicture();
F-- 0048C0A0 000000A2 void sub_48C0A0();
F-- 0048C150 000002C0 void GameMain();
F-- 0048C410 0000013D void sub_48C410();
F-- 0048C550 00000345 void CheckCheatMode();
F-- 0048C8C0 0000032B void S_SaveSettings();
F-- 0048CBF0 000004A1 void S_LoadSettings();
F-- 0048D0A0 0000002A void sub_48D0A0();
F-- 0048D0D0 00000046 void sub_48D0D0();
F-- 0048D120 00000026 void sub_48D120();
F-- 0048D150 00000046 void sub_48D150();
F-- 0048D1A0 00000039 void sub_48D1A0();
F-- 0048D1E0 0000001C void sub_48D1E0();
F-- 0048D200 0000000A void sub_48D200();
F-- 0048D210 00000017 void S_SoundStopSample();
F-- 0048D230 0000003C void S_SoundStopAllSamples();
F-- 0048D240 0000001F void sub_48D240();
F-- 0048D260 0000007E void S_CDLoop();
F-- 0048D480 00000014 void S_CDPlay();
F-- 0048D4A0 00000005 void S_CDStop();
F-- 0048D4B0 00000021 void S_StartSyncedAudio();
F-- 0048D4E0 00000005 void sub_48D4E0();
F-- 0048D4F0 0000000E void S_CDVolume();
F-- 0048D500 000000C8 void sub_48D500();
F-- 0048D5D0 0000000C void sub_48D5D0();
F-- 0048D5E0 00000041 void sub_48D5E0();
F-- 0048D630 00000069 void sub_48D630();
F-- 0048D6A0 0000003A void sub_48D6A0();
F-- 0048D6E0 000002CA void sub_48D6E0();
F-- 0048D9B0 0000069A void sub_48D9B0();
F-- 0048E050 0000038F void sub_48E050();
F-- 0048E3E0 00000060 void sub_48E3E0();
F-- 0048E440 0000004E void sub_48E440();
F-- 0048E490 0000006F void sub_48E490();
F-- 0048E500 0000002C void sub_48E500();
F-- 0048E530 0000003B void sub_48E530();
F-- 0048E570 00000061 void sub_48E570();
F-- 0048E5E0 000000E7 void sub_48E5E0();
F-- 0048E6D0 00000036 void sub_48E6D0();
F-- 0048E710 00000013 void sub_48E710();
F-- 0048E730 00000034 void sub_48E730();
F-- 0048E770 00000034 void sub_48E770();
F-- 0048E7B0 00000034 void sub_48E7B0();
F-- 0048E7F0 00000034 void sub_48E7F0();
F-- 0048E830 0000002F void sub_48E830();
F-- 0048E860 0000003E void sub_48E860();
F-- 0048E8A0 00000050 void sub_48E8A0();
F-- 0048E8F0 00000032 void sub_48E8F0();
F-- 0048E930 0000003C void sub_48E930();
F-- 0048E970 00000037 void sub_48E970();
F-- 0048E9B0 00000037 void sub_48E9B0();
F-- 0048E9F0 00000037 void sub_48E9F0();
F-- 0048EA30 00000178 void sub_48EA30();
F-- 0048EBB0 00000129 void sub_48EBB0();
F-- 0048ECE0 000000FB void sub_48ECE0();
F-- 0048EDE0 000000F5 void sub_48EDE0();
F-- 0048EEE0 000000E8 void sub_48EEE0();
F-- 0048EFD0 000001F0 void Callback();
F-- 0048F1C0 0000002D void sub_48F1C0();
F-- 0048F1F0 000001C2 void sub_48F1F0();
F-- 0048F3C0 000007ED void sub_48F3C0();
F-- 0048FBB0 000001F3 void sub_48FBB0();
F-- 0048FDB0 00000046 void sub_48FDB0();
F-- 0048FE40 00000057 void sub_48FE40();
F-- 0048FEA0 00000019 void sub_48FEA0();
F-- 0048FEC0 0000001A void sub_48FEC0();
F-- 0048FEE0 00000023 void sub_48FEE0();
F-- 0048FF10 00000048 void sub_48FF10();
F-- 0048FF60 0000001A void sub_48FF60();
F-- 0048FF80 00000015 void sub_48FF80();
F-- 0048FFA0 0000001F void sub_48FFA0();
F-- 0048FFC0 000000E1 void sub_48FFC0();
F-- 004900B0 00000010 void sub_4900B0();
F-- 004900C0 00000048 void sub_4900C0();
F-- 00490110 000002EF void sub_490110();
F-- 00490400 000002F3 void sub_490400();
F-- 00490700 0000008E void sub_490700();
F-- 00490780 00000119 void sub_490780();
F-- 004908A0 000000C5 void sub_4908A0();
F-- 00490970 00000013 void sub_490970();
F-- 00490990 0000000C void sub_490990();
F-- 004909A0 0000005F void sub_4909A0();
F-- 00490A00 00000016 void sub_490A00();
F-- 00490A20 00000071 void sub_490A20();
F-- 00490AE0 00000025 void sub_490AE0();
F-- 00490B10 00000022 void sub_490B10();
F-- 00490B40 00000058 void sub_490B40();
F-- 00490BA0 00000359 void sub_490BA0();
F-- 00490F10 0000003C void sub_490F10();
F-- 00490F50 0000002E void sub_490F50();
F-- 00490F80 00000047 void sub_490F80();
F-- 00490FD0 00000047 void sub_490FD0();
F-- 00491020 00000040 void sub_491020();
F-- 00491060 00000397 void sub_491060();
F-- 00491400 0000027A void sub_491400();
F-- 00491680 000002BF void sub_491680();
F-- 00491940 0000032C void sub_491940();
F-- 00491C70 00000224 void sub_491C70();
F-- 00491EA0 000001FF void sub_491EA0();
F-- 004920A0 00000180 void sub_4920A0();
F-- 00492220 0000019A void sub_492220();
F-- 004923C0 00000255 void sub_4923C0();
F-- 00492620 00000349 void sub_492620();
F-- 00492970 0000035E void sub_492970();
F-- 00492CD0 00000702 void sub_492CD0();
F-- 004933E0 000000CE void sub_4933E0();
F-- 004934D0 0000005A void sub_4934D0();
F-- 00493530 00000266 void sub_493530();
F-- 004937F0 0000011A void sub_4937F0();
F-- 00493920 00000348 void sub_493920();
F-- 00493C70 00000A3B void sub_493C70();
F-- 004946B0 00000777 void sub_4946B0();
F-- 00494E30 000004A4 void sub_494E30();
F-- 004953B0 000000D4 void sub_4953B0();
F-- 00496930 00000132 void sub_496930();
F-- 00496A70 000000AA void sub_496A70();
F-- 00496B20 0000008F void sub_496B20();
F-- 00496BB0 00000061 void sub_496BB0();
F-- 00496C20 0000063C void DialogFunc();
F-- 00497290 00000294 void sub_497290();
F-- 00497530 000000F6 void sub_497530();
F-- 00497630 000000C5 void sub_497630();
F-- 00497700 000000C5 void sub_497700();
F-- 004977D0 00000448 void sub_4977D0();
F-- 00497C20 000003B3 void sub_497C20();
F-- 00497FE0 00000766 void sub_497FE0();
F-- 00498750 0000010A void sub_498750();
F-- 00498860 0000053A void sub_498860();
F-- 00498DA0 00001039 void sub_498DA0();
F-- 00499DE0 0000072F void sub_499DE0();
F-- 0049A510 0000027C void sub_49A510();
F-- 0049A790 00000AD1 void sub_49A790();
F-- 0049B270 000005D8 void sub_49B270();
F-- 0049B890 00000882 void sub_49B890();
F-- 0049C160 00000CC0 void sub_49C160();
F-- 0049CE20 00000AF9 void sub_49CE20();
F-- 0049D920 0000112F void sub_49D920();
F-- 0049EA50 000013BB void sub_49EA50();
F-- 0049FE10 00002464 void sub_49FE10();
F-- 004A2280 0000221F void sub_4A2280();
F-- 004A44A0 00000482 void sub_4A44A0();
F-- 004A4930 0000067C void sub_4A4930();
F-- 004A4FB0 00000E98 void sub_4A4FB0();
F-- 004A5E50 00000D40 void sub_4A5E50();
F-- 004A6F20 000014A6 void sub_4A6F20();
F-- 004A83D0 0000150E void sub_4A83D0();
F-- 004A98E0 0000163D void sub_4A98E0();
F-- 004AAF20 0000262F void sub_4AAF20();
F-- 004AD550 000026BB void sub_4AD550();
F-- 004AFC10 00000F39 void sub_4AFC10();
F-- 004B0B50 0000101F void sub_4B0B50();
F-- 004B1B70 0000000A void sub_4B1B70();
F-- 004B1B80 00000070 void sub_4B1B80();
F-- 004B1BF0 0000019B void sub_4B1BF0();
F-- 004B1D90 0000017A void sub_4B1D90();
F-- 004B1F10 00000098 void sub_4B1F10();
F-- 004B1FB0 0000001B void sub_4B1FB0();
F-- 004B1FD0 00000025 void sub_4B1FD0();
F-- 004B2000 0000001B void sub_4B2000();
F-- 004B2020 0000009A void sub_4B2020();
F-- 004B20C0 000000B3 void sub_4B20C0();
F-- 004B2180 0000006A void sub_4B2180();
F-- 004B21F0 00000034 void sub_4B21F0();
F-- 004B2230 0000004B void sub_4B2230();
F-- 004B2280 000000EF void sub_4B2280();
F-- 004B2370 0000005C void sub_4B2370();
F-- 004B23D0 0000056E void sub_4B23D0();
F-- 004B2940 00000306 void WinMain();
F-- 004B2C50 0000000C void sub_4B2C50();
F-- 004B2C60 000000DF void sub_4B2C60();
F-- 004B2D40 00000074 void sub_4B2D40();
F-- 004B2DC0 0000004B void sub_4B2DC0();
F-- 004B2E10 00000070 void sub_4B2E10();
F-- 004B2E80 000000FA void sub_4B2E80();
F-- 004B2F80 0000054F void sub_4B2F80();
F-- 004B34D0 0000007F void sub_4B34D0();
F-- 004B3550 0000026A void sub_4B3550();
F-- 004B37C0 0000005B void S_ExitSystem();
F-- 004B3830 000000D0 void sub_4B3830();
F-- 004B3900 0000002E void sub_4B3900();
F-- 004B3930 00000016 void sub_4B3930();
F-- 004B3950 00000044 void sub_4B3950();
F-- 004B39A0 00000046 void sub_4B39A0();
F-- 004B39F0 0000004D void sub_4B39F0();
F-- 004B3A40 00000029 void sub_4B3A40();
F-- 004B3A70 000001D8 void sub_4B3A70();
F-- 004B3C50 000000BF void sub_4B3C50();
F-- 004B3D10 0000032A void sub_4B3D10();
F-- 004B4040 0000005C void sub_4B4040();
F-- 004B40A0 000001D3 void SaveDDBuffer();
F-- 004B4280 0000001E void phd_PushMatrix();
F-- 004B429E 00000033 void sub_4B429E();
F-- 004B42D4 00000061 void sub_4B42D4();
F-- 004B4335 0000013A void sub_4B4335();
F-- 004B446F 00000160 void sub_4B446F();
F-- 004B45CF 000002FD void sub_4B45CF();
F-- 004B48CC 00000341 void sub_4B48CC();
F-- 004B4C10 00000048 void phd_atan();
F-- 004B4C58 00000006 void phd_cos();
F-- 004B4C5E 0000001B void phd_sin();
F-- 004B4C79 0000001A void sub_4B4C79();
F-- 004B4C93 0000002C void phd_sqrt();

V-- 005A6A2C - PHD_MATRIX *g_PhdMatrixPtr;
V-- 005A6AC0 - PHD_MATRIX g_W2VMatrix;
V-- 005BAB58 - PHD_MATRIX g_MatrixStack[40];
V-- 006CF810 - PHD_VECTOR g_CamRot;
V-- 006D67A0 - uint32_t g_RequesterFlags2[24]; // MAX_LEVELS
V-- 006D6800 - uint32_t g_RequesterFlags1[24]; // MAX_LEVELS
V-- 006D78A4 - char **g_GF_Level_Names;
