project('Tomb3Main', ['c'],
  default_options: [
    'c_std=c11',
  ],
)

warning_level = 3
version = meson.project_version()
version_pretty = 'v' + version

git = find_program('git', required: true)
if git.found()
  gitdesc = run_command(git, 'describe', '--abbrev=7', '--tags', check: false)
  if gitdesc.returncode() == 0
    version_pretty = gitdesc.stdout().strip()
  else
    gitdesc = run_command(git, 'describe', '--always', '--abbrev=7', '--tags', check: false)
    if gitdesc.returncode() == 0
      version_pretty = '0.0-g' + gitdesc.stdout().strip()
    endif
  endif
endif

c_compiler = meson.get_compiler('c')

is_mingw = c_compiler.get_id() == 'gcc' and host_machine.system() == 'windows'
if is_mingw
  add_project_link_arguments([], language: 'c')
endif

build_opts = [
  '-Wno-unused',
  '-D_GNU_SOURCE',
  '-DVERSION="T3M ' + version_pretty + '"'
]
c_opts = []
add_project_arguments(build_opts + c_opts, language: 'c')

# autogenerated files
resources = []
python3 = find_program('python3', required: true)
custom_target(
'fake_init',
output: ['fake_init'],
command: [python3, meson.source_root() + '/scripts/generate_init'],
build_by_default: true
)
version_rc = custom_target(
'fake_version',
output: ['version.rc'],
command: [python3, meson.source_root() + '/scripts/generate_version', '--version', version_pretty, '--output', '@OUTPUT0@'],
build_always: true
)
if host_machine.system() == 'windows'
windows = import('windows')
resources = [
  windows.compile_resources(version_rc),
]
endif

sources = [
  'src/init.c',
  'src/inject.c',
  'src/inject_util.c',
  'src/log.c',
  'src/main.c',
  resources,
]

dependencies = [
]

shared_library(
  'Tomb3Main',
  sources,
  name_prefix: '',
  include_directories: ['src/'],
  dependencies: dependencies,
  link_args: ['-static'],
)
